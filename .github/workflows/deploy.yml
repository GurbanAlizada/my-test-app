name: CI/CD Pipeline

on:
  push:
    branches:
      - qurban

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set Execute Permissions for gradlew
      - name: Set Execute Permissions
        run: chmod +x ./gradlew

      # 3. Build Application (Skipping Tests)
      - name: Build Java Application
        run: ./gradlew clean build -x test

      # 4. Docker Image Build
      - name: Build Docker Image
        run: |
          JAR_FILE=$(find build/libs -name "*.jar" -type f | head -n 1)
          echo "Jar file: $JAR_FILE"
          cp "$JAR_FILE" ./myapp.jar
          docker build -t myapp:latest .
          docker save myapp:latest > myapp.tar

      # 5. Send Docker Image to Server
      - name: Send Docker Image
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.LOCAL_SERVER_IP }}
          username: ${{ secrets.LOCAL_SERVER_USER }}
          key: ${{ secrets.LOCAL_SERVER_SSH_KEY }}
          source: myapp.tar
          target: /home/${{ secrets.LOCAL_SERVER_USER }}/myapp.tar

      # 6. Deploy to Ubuntu Server
      - name: Deploy to Ubuntu Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.LOCAL_SERVER_IP }}
          username: ${{ secrets.LOCAL_SERVER_USER }}
          key: ${{ secrets.LOCAL_SERVER_SSH_KEY }}
          script: |
            echo "Stopping and removing old container..."
            docker stop myapp || true
            docker rm myapp || true
            
            echo "Loading Docker image..."
            docker load < /home/${{ secrets.LOCAL_SERVER_USER }}/myapp.tar
            
            echo "Running new container..."
            docker run -d --name myapp -p 8080:8080 myapp:latest
